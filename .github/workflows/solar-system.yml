name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

     #   - name: Setup NodeJS Version
     #     uses: actions/setup-node@v3
     #     with:
     #      node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Install Dependencies
          run: npm install

        - name: check code coverage
          run: npm run coverage
          continue-on-error: true

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5

    docker:
        name: docker
        needs: [unit-testing,code-coverage]
        runs-on: ubuntu-latest
        steps:

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: docke login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: set lower case owner name
          run: |
              echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          env:
              OWNER: '${{ github.repository_owner }}'

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
              push: true
              tags: ghcr.io/${{ env.OWNER_LC }}/solar-system:${{ github.sha }}

    dev-deploy:
      name: dev-deploy
      needs: docker
      runs-on: ubuntu-latest
      environment:
        name: development 
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Install kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.26.0'
          
        - name: Set Context
          uses: azure/k8s-set-context@v4
          with:
              method: kubeconfig
              k8s-secret: ${{ secrets.kubeconfig }}

        - name: Check Kubectl Version
          run: kubectl version --short -o yaml

